Team:

Gyaneshwar Rao Nampally A00433014
Allen Raju Mathew 
A00432526

Part 1:
/home/gr_nampally is considered as ~.
1. ~ is not equal to . (it is only equal when we are performing the operation from home directory of the user)
2. ~ is not equal to .. (it is only equal when we are performing the operation from the second level of folder of home directory. example /users/gr_nampally/foldername/ is the current directory, then cd .. or cd ~ would mean the same)
3. . is not equal to .. (it is only true when we are performing this operation from / (root) directory)
4. ~ is not equal to / (it is only true when for the root user).

~ redirects to the home directory of the user.

Part 2:

1. curl https://archive.ics.uci.edu/ml/machine-learning-databases/00235/household_power_consumption.zip --output householdpower.zip

2. unzip householdpower.zip

3. sed '1d' household_power_consumption.txt | wc -l
answer: 2075259
explanation: 1 = first line , d = delete , wc = word count , -l = lines.

4. sort -n -t';' -r -k3 household_power_consumption.txt | head > gap_max.txt
or
4. sed '1d' household_power_consumption.txt | sort -n -t';' -r -k3| head > gap_max.txt

answer:
22/2/2009;17:09:00;11.122;0.174;229.780;48.400;35.000;69.000;16.000
4/3/2007;19:34:00;10.670;0.516;230.200;46.400;37.000;69.000;16.000
4/3/2007;19:33:00;10.650;0.500;229.970;46.400;36.000;70.000;17.000
22/2/2009;17:08:00;10.536;0.192;230.240;45.800;23.000;69.000;16.000
30/11/2008;20:19:00;10.348;0.084;231.600;44.600;36.000;71.000;16.000
19/10/2008;01:24:00;10.290;0.302;230.900;44.600;35.000;66.000;17.000
27/1/2008;19:24:00;10.162;0.224;229.160;44.200;71.000;0.000;0.000
4/3/2007;19:32:00;10.154;0.502;229.720;44.400;36.000;61.000;16.000
30/11/2008;20:17:00;10.074;0.060;231.410;43.400;36.000;70.000;16.000
19/10/2008;01:25:00;10.064;0.324;231.480;43.400;36.000;69.000;17.000

explanation: -n = numeric sort, -t';' = seperator, -r = reverse sort, -k3 = 3rd category (sort by). numeric sort is more efficient than alphabatic sort.

5. sed -r 's/;/\,/g' household_power_consumption.txt > hpc.csv

output for: sed -r 's/;/\,/g' household_power_consumption.txt | head
Date,Time,Global_active_power,Global_reactive_power,Voltage,Global_intensity,Sub_metering_1,Sub_metering_2,Sub_metering_3
16/12/2006,17:24:00,4.216,0.418,234.840,18.400,0.000,1.000,17.000
16/12/2006,17:25:00,5.360,0.436,233.630,23.000,0.000,1.000,16.000
16/12/2006,17:26:00,5.374,0.498,233.290,23.000,0.000,2.000,17.000
16/12/2006,17:27:00,5.388,0.502,233.740,23.000,0.000,1.000,17.000
16/12/2006,17:28:00,3.666,0.528,235.680,15.800,0.000,1.000,17.000
16/12/2006,17:29:00,3.520,0.522,235.020,15.000,0.000,2.000,17.000
16/12/2006,17:30:00,3.702,0.520,235.090,15.800,0.000,1.000,17.000
16/12/2006,17:31:00,3.700,0.520,235.220,15.800,0.000,1.000,17.000
16/12/2006,17:32:00,3.668,0.510,233.990,15.800,0.000,1.000,17.000

explanation: -r = replace , -g = says everything to be replaced,  's/item/\replaceitem/g'

6. sed -r 's/^(.+),(.+),(.+),(.+),(.+),(.+),(.+),(.+),(.+)$/\1,\3,\4,\6/g' hpc.csv | sed -r 's/Date/Year/g' | sed -r 's/^(.+)\/(.+)\/(.+)$/\3/g' >
 transformed.csv

output for:sed -r 's/^(.+),(.+),(.+),(.+),(.+),(.+),(.+),(.+),(.+)$/\1,\3,\4,\6/g' hpc.csv | sed -r 's/Date/Year/g' | sed -r 's/^(.+)\/(.+)\/(.+)$/\3/g' | head

Year,Global_active_power,Global_reactive_power,Global_intensity
2006,4.216,0.418,18.400
2006,5.360,0.436,23.000
2006,5.374,0.498,23.000
2006,5.388,0.502,23.000
2006,3.666,0.528,15.800
2006,3.520,0.522,15.000
2006,3.702,0.520,15.800
2006,3.700,0.520,15.800
2006,3.668,0.510,15.800

explanation:

first sed is used to select the columns extracted, second sed is used to replace 'Date' to 'Year', third sed is used to extract particular 'year' from the date.

7. grep -E '[0-9]{4},(2.042)' transformed.csv > 2p042.csv

output for:grep -E '[0-9]{4},(2.042)' transformed.csv | head
2006,2.042,0.090,8.400
2006,2.042,0.066,9.000
2006,2.042,0.000,8.800
2006,2.042,0.182,8.600
2006,2.042,0.156,9.200
2007,2.042,0.000,8.400
2007,2.042,0.000,8.400
2007,2.042,0.108,8.600
2007,2.042,0.106,8.600
2007,2.042,0.000,8.200

grep -E '[0-9]{4},(2.042)' transformed.csv | wc -l
output for number of records: 476

8. grep -Ev '(2007),' transformed.csv > tr_no2007.csv

9. sed '1d' tr_no2007.csv | shuf > nohead_tr_no2007.csv 
split -n 3 nohead_tr_no2007.csv 
answer: xaa xab xac

gr_nampally@lnx:~$ cat xaa | wc -l
516582
gr_nampally@lnx:~$ cat xab | wc -l
516513
gr_nampally@lnx:~$ cat xac | wc -l
516564

10. tar -Jcf arc.tar.xz 2p042.csv gap_max.txt hpc.csv transformed.csv tr_no2007.csv xaa xab xac nohead_tr_no2007.csv

